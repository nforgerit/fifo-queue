'use strict';var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if('value'in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor)}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor}}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError('Cannot call a class as a function')}}function _possibleConstructorReturn(self,call){if(!self){throw new ReferenceError('this hasn\'t been initialised - super() hasn\'t been called')}return call&&(typeof call==='object'||typeof call==='function')?call:self}function _inherits(subClass,superClass){if(typeof superClass!=='function'&&superClass!==null){throw new TypeError('Super expression must either be null or a function, not '+typeof superClass)}subClass.prototype=Object.create(superClass&&superClass.prototype,{constructor:{value:subClass,enumerable:false,writable:true,configurable:true}});if(superClass)Object.setPrototypeOf?Object.setPrototypeOf(subClass,superClass):subClass.__proto__=superClass}var AbstractQueue=require('abstract-queue');var FifoQueue=function(_AbstractQueue){_inherits(FifoQueue,_AbstractQueue);function FifoQueue(items){_classCallCheck(this,FifoQueue);var _this=_possibleConstructorReturn(this,Object.getPrototypeOf(FifoQueue).call(this));_this.itemSet=items||[];return _this}_createClass(FifoQueue,[{key:'addItem',value:function addItem(item){this.itemSet.unshift(item)}},{key:'next',value:function next(){return this.itemSet.shift()}}]);return FifoQueue}(AbstractQueue);module.exports=FifoQueue;
